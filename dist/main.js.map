{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDGGoC,CAAC,OAAC,IAAI,GAAG,CAAU,WAAkB,CAAC,EAAE,CAAC;IACzE,MAAM,2CAAE,CAAE;;YAAC,CAAiB;YAAE,IAAI;;;AACtC,CAAC;;;;;;;;;;;;;;;;MGDoB,wCAAY,SAAS,WAAW;eAGxC,kBAAkB,GAAG,CAAC;QAC/B,MAAM,CAAC,CAAC;YAAA,CAAM;QAAA,CAAC;IACjB,CAAC;iBAEa,CAAC;QACb,KAAK;QACL,IAAI,CAAC,KAAK,GAAG,CAAE;QACf,IAAI,CAAC,MAAM;IACb,CAAC;IAED,wBAAwB,CAAC,IAAY,EAAE,QAAgB,EAAE,QAAgB,EAAE,CAAC;QAC1E,EAAE,EAAE,IAAI,KAAK,CAAM,OACjB,IAAI,CAAC,KAAK,GAAG,QAAQ;QAGvB,IAAI,CAAC,MAAM;IACb,CAAC;IAED,MAAM,GAAG,CAAC;QACR,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAAC,IAAI,EAAE,CAAM;QAAC,CAAC;QAC/C,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAK;QAE/C,IAAI,CAAC,WAAW,CAAC,UAAU;QAE3B,yCAAQ,CAAC,MAAM,0CAAE,wCAAU;YAAC,IAAI,EAAE,IAAI,CAAC,KAAK;YAAM,UAAU;IAC5D,EAAqB,AAArB,mBAAqB;IACrB,EAA8B,AAA9B,4BAA8B;IAC9B,EAAyC,AAAzC,uCAAyC;IACzC,EAAW,AAAX,SAAW;IACX,EAAK,AAAL,GAAK;IACP,CAAC;QAEG,IAAI,GAAG,CAAC;QACV,MAAM,CAAC,IAAI,CAAC,KAAK;IACnB,CAAC;QAEG,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK;IACpB,CAAC;;;;;","sources":["src/index.ts","src/components/index.ts","src/components/HelloWorld/index.ts","src/components/HelloWorld/HelloWorld.tsx","src/components/HelloWorld/HelloWorldProps.ts","src/web-components/index.ts","src/web-components/HelloWorld.tsx"],"sourcesContent":["export * from './components';\r\nexport * from './web-components';","export { default as HelloWorld } from './HelloWorld';\r\n/* PLOP_INJECT_EXPORT */","export { default } from './HelloWorld';\r\nexport * from './HelloWorldProps';","import React from 'react';\r\nimport { HelloWorldProps } from './HelloWorldProps';\r\n\r\nexport default function HelloWorld ({ name = 'John Doe' }: HelloWorldProps) {\r\n    return <h1>Hello World from { name }</h1>;\r\n}","export interface HelloWorldProps {\r\n    name?: string;\r\n}","export { default as HelloWorldWc } from './HelloWorld';","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HelloWorld } from \"../components\";\r\n\r\nexport default class HelloWorldWC extends HTMLElement {\r\n  private _name: string;\r\n\r\n  static get observedAttributes() {\r\n    return [\"name\"];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this._name = \"\";\r\n    this.render();\r\n  }\r\n\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    if (name === \"name\") {\r\n      this._name = newValue;\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    const root = this.attachShadow({ mode: \"open\" });\r\n    const mountPoint = document.createElement(\"div\");\r\n\r\n    root.appendChild(mountPoint);\r\n\r\n    ReactDOM.render(<HelloWorld name={this._name} />, mountPoint);\r\n    // this.innerHTML = `\r\n    //   <div class=\"hello-world\">\r\n    //     <h3>Hello World from ${this._name}\r\n    //   </div>\r\n    // `;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value) {\r\n    this._name = value;\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}